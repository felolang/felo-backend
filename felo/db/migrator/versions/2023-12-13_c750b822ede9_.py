"""empty message

Revision ID: c750b822ede9
Revises: 
Create Date: 2023-12-13 00:49:48.099888

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "c750b822ede9"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "token",
        sa.Column("token", sa.TEXT(), nullable=False),
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column(
            "create_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__token")),
        sa.UniqueConstraint("id", name=op.f("uq__token__id")),
    )
    op.create_index(op.f("ix__token__token"), "token", ["token"], unique=True)
    op.create_table(
        "user",
        sa.Column("username", sa.TEXT(), nullable=True),
        sa.Column("password", sa.TEXT(), nullable=True),
        sa.Column("email", sa.TEXT(), nullable=False),
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column(
            "create_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__user")),
        sa.UniqueConstraint("id", name=op.f("uq__user__id")),
    )
    op.create_index(op.f("ix__user__password"), "user", ["password"], unique=False)
    op.create_index(op.f("ix__user__username"), "user", ["username"], unique=True)
    op.create_table(
        "lookup",
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column(
            "source_language",
            sa.Enum(
                "AB",
                "AA",
                "AF",
                "AK",
                "SQ",
                "AM",
                "AR",
                "AN",
                "HY",
                "AS",
                "AV",
                "AE",
                "AY",
                "AZ",
                "BM",
                "BA",
                "EU",
                "BE",
                "BN",
                "BH",
                "BI",
                "BS",
                "BR",
                "BG",
                "MY",
                "CA",
                "CH",
                "CE",
                "NY",
                "ZH",
                "CV",
                "KW",
                "CO",
                "CR",
                "HR",
                "CS",
                "DA",
                "DV",
                "NL",
                "DZ",
                "EN",
                "EO",
                "ET",
                "EE",
                "FO",
                "FJ",
                "FI",
                "FR",
                "FF",
                "GL",
                "KA",
                "DE",
                "EL",
                "GN",
                "GU",
                "HT",
                "HA",
                "HE",
                "HZ",
                "HI",
                "HO",
                "HU",
                "IA",
                "ID",
                "IE",
                "GA",
                "IG",
                "IK",
                "IO",
                "IS",
                "IT",
                "IU",
                "JA",
                "JV",
                "KL",
                "KN",
                "KR",
                "KS",
                "KK",
                "KM",
                "KI",
                "RW",
                "KY",
                "KV",
                "KG",
                "KO",
                "KU",
                "KJ",
                "LA",
                "LB",
                "LG",
                "LI",
                "LN",
                "LO",
                "LT",
                "LU",
                "LV",
                "GV",
                "MK",
                "MG",
                "MS",
                "ML",
                "MT",
                "MI",
                "MR",
                "MH",
                "MN",
                "NA",
                "NV",
                "ND",
                "NE",
                "NG",
                "NB",
                "NN",
                "NO",
                "II",
                "NR",
                "OC",
                "OJ",
                "CU",
                "OM",
                "OR",
                "OS",
                "PA",
                "PI",
                "FA",
                "PL",
                "PS",
                "PT",
                "QU",
                "RM",
                "RN",
                "RO",
                "RU",
                "SA",
                "SC",
                "SD",
                "SE",
                "SM",
                "SG",
                "SR",
                "GD",
                "SN",
                "SI",
                "SK",
                "SL",
                "SO",
                "ST",
                "ES",
                "SU",
                "SW",
                "SS",
                "SV",
                "TA",
                "TE",
                "TG",
                "TH",
                "TI",
                "BO",
                "TK",
                "TL",
                "TN",
                "TO",
                "TR",
                "TS",
                "TT",
                "TW",
                "TY",
                "UG",
                "UK",
                "UR",
                "UZ",
                "VE",
                "VI",
                "VO",
                "WA",
                "CY",
                "WO",
                "FY",
                "XH",
                "YI",
                "YO",
                "ZA",
                "ZU",
                name="language",
            ),
            nullable=False,
        ),
        sa.Column(
            "target_language",
            sa.Enum(
                "AB",
                "AA",
                "AF",
                "AK",
                "SQ",
                "AM",
                "AR",
                "AN",
                "HY",
                "AS",
                "AV",
                "AE",
                "AY",
                "AZ",
                "BM",
                "BA",
                "EU",
                "BE",
                "BN",
                "BH",
                "BI",
                "BS",
                "BR",
                "BG",
                "MY",
                "CA",
                "CH",
                "CE",
                "NY",
                "ZH",
                "CV",
                "KW",
                "CO",
                "CR",
                "HR",
                "CS",
                "DA",
                "DV",
                "NL",
                "DZ",
                "EN",
                "EO",
                "ET",
                "EE",
                "FO",
                "FJ",
                "FI",
                "FR",
                "FF",
                "GL",
                "KA",
                "DE",
                "EL",
                "GN",
                "GU",
                "HT",
                "HA",
                "HE",
                "HZ",
                "HI",
                "HO",
                "HU",
                "IA",
                "ID",
                "IE",
                "GA",
                "IG",
                "IK",
                "IO",
                "IS",
                "IT",
                "IU",
                "JA",
                "JV",
                "KL",
                "KN",
                "KR",
                "KS",
                "KK",
                "KM",
                "KI",
                "RW",
                "KY",
                "KV",
                "KG",
                "KO",
                "KU",
                "KJ",
                "LA",
                "LB",
                "LG",
                "LI",
                "LN",
                "LO",
                "LT",
                "LU",
                "LV",
                "GV",
                "MK",
                "MG",
                "MS",
                "ML",
                "MT",
                "MI",
                "MR",
                "MH",
                "MN",
                "NA",
                "NV",
                "ND",
                "NE",
                "NG",
                "NB",
                "NN",
                "NO",
                "II",
                "NR",
                "OC",
                "OJ",
                "CU",
                "OM",
                "OR",
                "OS",
                "PA",
                "PI",
                "FA",
                "PL",
                "PS",
                "PT",
                "QU",
                "RM",
                "RN",
                "RO",
                "RU",
                "SA",
                "SC",
                "SD",
                "SE",
                "SM",
                "SG",
                "SR",
                "GD",
                "SN",
                "SI",
                "SK",
                "SL",
                "SO",
                "ST",
                "ES",
                "SU",
                "SW",
                "SS",
                "SV",
                "TA",
                "TE",
                "TG",
                "TH",
                "TI",
                "BO",
                "TK",
                "TL",
                "TN",
                "TO",
                "TR",
                "TS",
                "TT",
                "TW",
                "TY",
                "UG",
                "UK",
                "UR",
                "UZ",
                "VE",
                "VI",
                "VO",
                "WA",
                "CY",
                "WO",
                "FY",
                "XH",
                "YI",
                "YO",
                "ZA",
                "ZU",
                name="language",
            ),
            nullable=False,
        ),
        sa.Column("text", sa.String(), nullable=False),
        sa.Column("context", sa.String(), nullable=True),
        sa.Column("context_translation", sa.String(), nullable=True),
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column(
            "create_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name=op.f("fk__lookup__user_id__user")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__lookup")),
        sa.UniqueConstraint("id", name=op.f("uq__lookup__id")),
    )
    op.create_table(
        "lookup_answer",
        sa.Column("lookup_id", sa.UUID(), nullable=False),
        sa.Column(
            "engine",
            sa.Enum("GOOGLE", "GPT_3_5_TURBO_1106", name="translateengineenum"),
            nullable=False,
        ),
        sa.Column("extended_text", sa.String(), nullable=True),
        sa.Column("text_translation", sa.JSON(), nullable=True),
        sa.Column("normalized_text", sa.String(), nullable=True),
        sa.Column("normalized_text_translation", sa.JSON(), nullable=True),
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column(
            "create_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["lookup_id"],
            ["lookup.id"],
            name=op.f("fk__lookup_answer__lookup_id__lookup"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__lookup_answer")),
        sa.UniqueConstraint("id", name=op.f("uq__lookup_answer__id")),
    )
    op.create_table(
        "phrases",
        sa.Column("phrase_text", sa.String(), nullable=False),
        sa.Column("phrase_normalized_text", sa.String(), nullable=False),
        sa.Column("phrase_text_translation", sa.String(), nullable=False),
        sa.Column("phrase_normalized_text_translation", sa.String(), nullable=False),
        sa.Column(
            "type",
            sa.Enum(
                "IDIOM",
                "SLANG",
                "PHRASAL_VERB",
                "ORDINARY_WORD",
                "TERM",
                name="phrasestypeenum",
            ),
            nullable=False,
        ),
        sa.Column("lookup_answer_id", sa.UUID(), nullable=False),
        sa.Column("explanation", sa.String(), nullable=True),
        sa.Column("explanation_translation", sa.String(), nullable=True),
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column(
            "create_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["lookup_answer_id"],
            ["lookup_answer.id"],
            name=op.f("fk__phrases__lookup_answer_id__lookup_answer"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__phrases")),
        sa.UniqueConstraint("id", name=op.f("uq__phrases__id")),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("phrases")
    op.drop_table("lookup_answer")
    op.drop_table("lookup")
    op.drop_index(op.f("ix__user__username"), table_name="user")
    op.drop_index(op.f("ix__user__password"), table_name="user")
    op.drop_table("user")
    op.drop_index(op.f("ix__token__token"), table_name="token")
    op.drop_table("token")
    # ### end Alembic commands ###
